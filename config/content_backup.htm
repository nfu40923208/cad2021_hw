<h1>About</h1>
<p>本學期的電腦輔助設計實習, 要求每一位學員根據本 HW template 的格式建立個人的作業倉儲與網頁.</p>
<hr/>
<p>你的學號</p>
<p>網站倉儲: <a href="https://github.com/nfu40923208/cad2021_hw">https://github.com/nfu40923208/cad2021_hw</a></p>
<p>網站連結: <a href="https://nfu40923208.github.io/cad2021_hw/">https://nfu40923208.github.io/cad2021_hw/</a></p>
<p>其他與作者或作業相關資料說明或介紹。</p>
<p></p>
<h1>Work Progress</h1>
<p>9/25</p>
<p>建立倉儲、修改標題</p>
<p>10/7</p>
<p>增加班上每位同學的網站連結</p>
<p>10/11</p>
<p>說明如何找出班上每位同學的網站連結</p>
<p>10/18</p>
<p>新增Run</p>
<p>修改github帳號</p>
<p>10/21</p>
<p>update readme.md</p>
<p>10/24</p>
<p>修改Run</p>
<p>11/4</p>
<p>新增github連結</p>
<p>增加inventor起源、功能和slovespace起源和功能</p>
<p>11/14</p>
<p>整理網站，讓網站更淺顯易懂</p>
<p>11/27</p>
<p>剪輯slospace操作影片</p>
<p>12/1</p>
<p>新增slospace操作影片</p>
<p>完成slovespace繪製</p>
<p>12/6</p>
<p>新增wink</p>
<p></p>
<h1>Task</h1>
<h2>hwpages</h2>
<p>cad2021 2b</p>
<p>解決方法:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 將資料存入 gist, 取其 url
url = "https://gist.githubusercontent.com/mdecourse/b11a88a98655d41055c47f08fe94788f/raw/8a27e6885ee1a5074bcf864d741679afeac796c4/2b_w2_stud_list.txt"
# 利用 open() 開啟 url 後, 以 readlines() 讀取後可納入數列
data = open(url).readlines()
# 檢查資料筆數, 第一筆為 title
#print(data)
#print(len(data))
data = data[1:]
#print(data)
for i in range(len(data)):
num_github = data[i]
num = num_github.split("\t")[0]
account = num_github.split("\t")[1]
if account == "":
account = num
print("&lt;a href='https://" + str(account) + ".github.io/cad2021_hw'&gt;"+ str(num) + "&lt;/a&gt;")</pre>
<p><br/><br/></p>
<p>cad2b     </p>
<p> github account</p>
<p> <a href="https://40723126.github.io/cad2021_hw">40723126</a><br/> <a href="https://40723135.github.io/cad2021_hw">40723135 </a><br/> <a href="https://40723217.github.io/cad2021_hw">40723217 </a><br/> <a href="https://40732331.github.io/cad2021_hw">40932331 </a><br/> <a href="https://40823114.github.io/cad2021_hw">40823114 </a><br/> <a href="https://40823115.github.io/cad2021_hw">40823115 </a><br/> <a href="https://pyc40823117.github.io/cad2021_hw">40823117 </a><br/> <a href="https://40823119.github.io/cad2021_hw">40823119 </a><br/> <a href="https://40823122.github.io/cad2021_hw">40823122 </a><br/> <a href="https://40823127.github.io/cad2021_hw">40823127 </a><br/> <a href="https://40823146.github.io/cad2021_hw">40823146 </a><br/> <a href="https://40823148.github.io/cad2021_hw">40823148 </a><br/> <a href="https://40823215.github.io/cad2021_hw">40823215 </a><br/> <a href="https://40871106.github.io/cad2021_hw">40871106 </a><br/> <a href="https://40923201.github.io/cad2021_hw">40923201 </a><br/> <a href="https://youshin40923203.github.io/cad2021_hw">40923203 </a><br/> <a href="https://40923204.github.io/cad2021_hw">40923204 </a><br/> <a href="https://40923205.github.io/cad2021_hw">40923205 </a><br/> <a href="https://40923206-1.github.io/cad2021_hw">40923206 </a><br/> <a href="https://40923207.github.io/cad2021_hw">40923207 </a><br/> <a href="https://nfu40923208.github.io/cad2021_hw">40923208 </a><br/> <a href="https://nfu40923209.github.io/cad2021_hw">40923209 </a><br/> <a href="https://40923210.github.io/cad2021_hw">40923210 </a><br/> <a href="https://a40923211.github.io/cad2021_hw">40923211 </a><br/> <a href="https://40923212.github.io/cad2021_hw">40923212</a><br/> <a href="https://40923213.github.io/cad2021_hw">40923213 </a><br/> <a href="https://40923214.github.io/cad2021_hw">40923214 </a><br/> <a href="https://40923216.github.io/cad2021_hw">40923216 </a><br/> <a href="https://40923217.github.io/cad2021_hw">40923217 </a><br/> <a href="https://40923218.github.io/cad2021_hw">40923218 </a><br/> <a href="https://nfu40923219.github.io/cad2021_hw">40923219 </a><br/> <a href="https://40923220.github.io/cad2021_hw">40923220 </a><br/> <a href="https://40923221.github.io/cad2021_hw">40923221 </a><br/> <a href="https://40923223.github.io/cad2021_hw">40923223 </a><br/> <a href="https://s40923224.github.io/cad2021_hw">40923224 </a><br/> <a href="https://40923225.github.io/cad2021_hw">40923225 </a><br/> <a href="https://40923226.github.io/cad2021_hw">40923226 </a><br/> <a href="https://40923227.github.io/cad2021_hw">40923227 </a><br/> <a href="https://40923228.github.io/cad2021_hw">40923228 </a><br/> <a href="https://40923229.github.io/cad2021_hw">40923229 </a><br/> <a href="https://40923230.github.io/cad2021_hw">40923230 </a><br/> <a href="https://40923231.github.io/cad2021_hw">40923231 </a><br/> <a href="https://40923232.github.io/cad2021_hw">40923232 </a><br/> <a href="https://40923233.github.io/cad2021_hw">40923233 </a><br/> <a href="https://40923234.github.io/cad2021_hw">40923234 </a><br/> <a href="https://40923235.github.io/cad2021_hw">40923235 </a><br/> <a href="https://40923236.github.io/cad2021_hw">40923236 </a><br/> <a href="https://40923237.github.io/cad2021_hw">40923237 </a><br/> <a href="https://40923238.github.io/cad2021_hw">40923238 </a><br/> <a href="https://40923239.github.io/cad2021_hw">40923239 </a><br/> <a href="https://40923240.github.io/cad2021_hw">40923240 </a><br/> <a href="https://40923241.github.io/cad2021_hw">40923241 </a><br/> <a href="https://40923242.github.io/cad2021_hw">40923242 </a><br/> <a href="https://40923243.github.io/cad2021_hw">40923243 </a><br/> <a href="https://40923244.github.io/cad2021_hw">40923244 </a><br/> <a href="https://40923245-1.github.io/cad2021_hw">40923245 </a><br/> <a href="https://40923246.github.io/cad2021_hw">40923246 </a><br/> <a href="https://40923247.github.io/cad2021_hw">40923247 </a><br/> <a href="https://40923248.github.io/cad2021_hw">40923248 </a><br/> <a href="https://40923249-1.github.io/cad2021_hw">40923249 </a><br/> <a href="https://40923250.github.io/cad2021_hw">40923250 </a><br/> <a href="https://40923251.github.io/cad2021_hw">40923251 </a><br/> <a href="https://40923252.github.io/cad2021_hw">40923252 </a><br/> <a href="https://40923253.github.io/cad2021_hw">40923253 </a><br/> <a href="https://40971220.github.io/cad2021_hw">40971220 </a><br/> <a href="https://40971227.github.io/cad2021_hw">40971227 </a><br/>&lt;completed in 331.00 ms&gt;</p>
<h2>github page</h2>
<pre auto-links:false="" brush:py="" class="brush:py;auto-links:false&lt;h2&gt;github page&lt;/h2&gt; &lt;pre class=" contenteditable="false" toolbar:false="">#2B每人github網站
data = open('D:/abb52/Desktop/2bcad.txt').readlines()
data = data[1:]
for i in range(len(data)):
    num_github = data[i]
    num = num_github.split("\t")[0]
    account = num_github.split("\t")[1].strip()
    if account == "":
        account = num
#print(num, account)
    print("&lt;a href='https://github.com" + str(account) + "/cad2021_hw'&gt;" +str(num) + "&lt;/a&gt;")</pre>
<p><a href="https://github.com/40723126/cad2021_hw">40723126</a><span><span> </span></span></p>
<p><a href="https://github.com/40723135/cad2021_hw">40723135</a><span><span> </span></span></p>
<p><a href="https://github.com/40723217/cad2021_hw">40723217</a><span><span> </span></span></p>
<p><a href="https://github.com/40732331/cad2021_hw">40732331</a><span><span> </span></span></p>
<p><a href="https://github.com/40823114/cad2021_hw">40823114</a><span><span> </span></span></p>
<p><a href="https://github.com/40823115/cad2021_hw">40823115</a><span><span> </span></span></p>
<p><a href="https://github.com/pyc40823117/cad2021_hw">40823117</a><span><span> </span></span></p>
<p><a href="https://github.com/40823119/cad2021_hw">40823119</a><span><span> </span></span></p>
<p><a href="https://github.com/40823122/cad2021_hw">40823122</a><span><span> </span></span></p>
<p><a href="https://github.com/40823127/cad2021_hw">40823127</a><span><span> </span></span></p>
<p><a href="https://github.com/40823146/cad2021_hw">40823146</a><span><span> </span></span></p>
<p><a href="https://github.com/40823148/cad2021_hw">40823148</a><span><span> </span></span></p>
<p><a href="https://github.com/40823215/cad2021_hw">40823215</a><span><span> </span></span></p>
<p><a href="https://github.com/40871106/cad2021_hw">40871106</a><span><span> </span></span></p>
<p><a href="https://github.com/40923201/cad2021_hw">40923201</a><span><span> </span></span></p>
<p><a href="https://github.com/youshin40923203/cad2021_hw">40923203</a><span><span> </span></span></p>
<p><a href="https://github.com/40923204/cad2021_hw">40923204</a><span><span> </span></span></p>
<p><a href="https://github.com/40923205/cad2021_hw">40923205</a><span><span> </span></span></p>
<p><a href="https://github.com/40923206-1/cad2021_hw">40923206</a><span><span> </span></span></p>
<p><a href="https://github.com/40923207/cad2021_hw">40923207</a><span><span> </span></span></p>
<p><a href="https://github.com/nfu40923208/cad2021_hw">40923208</a><span><span> </span></span></p>
<p><a href="https://github.com/nfu40923209/cad2021_hw">40923209</a><span><span> </span></span></p>
<p><a href="https://github.com/40923210/cad2021_hw">40923210</a><span><span> </span></span></p>
<p><a href="https://github.com/a40923211/cad2021_hw">40923211</a><span><span> </span></span></p>
<p><a href="https://github.com/40923212/cad2021_hw">40923212</a><span><span> </span></span></p>
<p><a href="https://github.com/40923213/cad2021_hw">40923213</a><span><span> </span></span></p>
<p><a href="https://github.com/40923214/cad2021_hw">40923214</a><span><span> </span></span></p>
<p><a href="https://github.com/40923216/cad2021_hw">40923216</a><span><span> </span></span></p>
<p><a href="https://github.com/40923217/cad2021_hw">40923217</a><span><span> </span></span></p>
<p><a href="https://github.com/40923218/cad2021_hw">40923218</a><span><span> </span></span></p>
<p><a href="https://github.com/nfu40923219/cad2021_hw">40923219</a><span><span> </span></span></p>
<p><a href="https://github.com/40923220/cad2021_hw">40923220</a><span><span> </span></span></p>
<p><a href="https://github.com/40923221/cad2021_hw">40923221</a><span><span> </span></span></p>
<p><a href="https://github.com/40923223/cad2021_hw">40923223</a><span><span> </span></span></p>
<p><a href="https://github.com/s40923224/cad2021_hw">40923224</a><span><span> </span></span></p>
<p><a href="https://github.com/40923225/cad2021_hw">40923225</a><span><span> </span></span></p>
<p><a href="https://github.com/40923226/cad2021_hw">40923226</a><span><span> </span></span></p>
<p><a href="https://github.com/40923227/cad2021_hw">40923227</a><span><span> </span></span></p>
<p><a href="https://github.com/40923228/cad2021_hw">40923228</a><span><span> </span></span></p>
<p><a href="https://github.com/40923229/cad2021_hw">40923229</a><span><span> </span></span></p>
<p><a href="https://github.com/40923230/cad2021_hw">40923230</a><span><span> </span></span></p>
<p><a href="https://github.com/40923231/cad2021_hw">40923231</a><span><span> </span></span></p>
<p><a href="https://github.com/40923232/cad2021_hw">40923232</a><span><span> </span></span></p>
<p><a href="https://github.com/40923233/cad2021_hw">40923233</a><span><span> </span></span></p>
<p><a href="https://github.com/40923234/cad2021_hw">40923234</a><span><span> </span></span></p>
<p><a href="https://github.com/40923235/cad2021_hw">40923235</a><span><span> </span></span></p>
<p><a href="https://github.com/40923236/cad2021_hw">40923236</a><span><span> </span></span></p>
<p><a href="https://github.com/40923237/cad2021_hw">40923237</a><span><span> </span></span></p>
<p><a href="https://github.com/40923238/cad2021_hw">40923238</a><span><span> </span></span></p>
<p><a href="https://github.com/40923239/cad2021_hw">40923239</a><span><span> </span></span></p>
<p><a href="https://github.com/40923240/cad2021_hw">40923240</a><span><span> </span></span></p>
<p><a href="https://github.com/40923241/cad2021_hw">40923241</a><span><span> </span></span></p>
<p><a href="https://github.com/40923242/cad2021_hw">40923242</a><span><span> </span></span></p>
<p><a href="https://github.com/40923243/cad2021_hw">40923243</a><span><span> </span></span></p>
<p><a href="https://github.com/40923244/cad2021_hw">40923244</a><span><span> </span></span></p>
<p><a href="https://github.com/40923245-1/cad2021_hw">40923245</a><span><span> </span></span></p>
<p><a href="https://github.com/40923246/cad2021_hw">40923246</a><span><span> </span></span></p>
<p><a href="https://github.com/40923247/cad2021_hw">40923247</a><span><span> </span></span></p>
<p><a href="https://github.com/40923248/cad2021_hw">40923248</a><span><span> </span></span></p>
<p><a href="https://github.com/40923249-1/cad2021_hw">40923249</a><span><span> </span></span></p>
<p><a href="https://github.com/40923250/cad2021_hw">40923250</a><span><span> </span></span></p>
<p><a href="https://github.com/40923251/cad2021_hw">40923251</a><span><span> </span></span></p>
<p><a href="https://github.com/40923252/cad2021_hw">40923252</a><span><span> </span></span></p>
<p><a href="https://github.com/40923253/cad2021_hw">40923253</a><span><span> </span></span></p>
<p><a href="https://github.com/40971220/cad2021_hw">40971220</a><span><span> </span></span></p>
<p><a href="https://github.com/40971227/cad2021_hw">40971227</a></p>
<p></p>
<h1>Wink</h1>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="756" video="" width="1344">
<source src="/downloads/wink.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h1>HW1</h1>
<p>HW1 佔學期成績 25%</p>
<p><span style="background-color: #ffff99;">HW1 必須在 2021.11.10 22:00 之前完成.<br/><!--<h1-->HW1</span></p>
<p>HW1 佔學期成績 25%</p>
<p><span style="background-color: #ffff99;">HW1 必須在 2021.11.10 22:00 之前完成.<br/></span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/5">HW1 具體項目成果回報區</a>將於 2021.09.23 開啟, 於 <span style="background-color: #ff99cc;">2021.11.10 22:00 關閉.</span></p>
<h4>作業一: meArm Robot 零件繪圖與機電運動模擬場景製作</h4>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step1</span>: 下載 <a href="https://drive.google.com/file/d/18ukdNlFB9yHY-FZSY-bTnzrPrNv0FE4D/view?usp=sharing">meARM.7z</a> 這個包含尚未完成組立的 meArm Robot 場景與雷射切割零件組立手冊.</p>
<p style="padding-left: 60px;"><a href="/downloads/meArm_75-0040_v1.pdf">meArm_75-0040_v1.pdf</a> 則是另外一本組立參考手冊.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step2</span>: 從課程網頁中的 <a href="https://mde.tw/cad2021/content/Compile%20CoppeliaSim.html">Compile CoppeliaSim 頁面</a>, 下載 <a href="https://drive.google.com/file/d/1hV8hHjjnLvUp-AEjd2iCfBYk067WSjcy/view?usp=sharing">coppeliaSim 4.1.0 官方版與 MSYS2 編譯版.7z</a> (檔案大小 412 MB, 解開壓縮後 1GB) 可攜套件.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step3</span>: 在 HW1 中, 要求每一位學員透過程式亂數分配 (兩班實際亂數分配結果以上課時點擊下列按鈕所得結果為準) 所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,  經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件<a href="https://www.coppeliarobotics.com/helpFiles/en/importExport.htm">匯入</a> CoppeliaSim 進行組裝配置後, 以 <a href="https://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">UI 介面</a>中的 slider 控制 meArm Robot 各軸的旋轉作動.</p>
<p style="padding-left: 30px;">2b CAD 套件分配結果: <a href="https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt">https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt</a></p>
<h4>附件:</h4>
<p style="padding-left: 30px;">1. CAD 套件分配表:</p>
<p style="padding-left: 60px;">sw: Solidworks, inv: Inventor, nx: NX12, ons: Onshape, slvs: Solvespace</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cad2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/6d0b8df27021529f910cbd0fde2222b6/raw/d5dbb42166e70d9bf4815e0f669957e40106f8fc/distrubute_cad_combination.py">2a 套件亂數分配結果</a></p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cad2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/6d0b8df27021529f910cbd0fde2222b6/raw/d5dbb42166e70d9bf4815e0f669957e40106f8fc/distrubute_cad_combination_b.py">2b 套件亂數分配結果</a></p>
<p style="padding-left: 30px;">2. 在兩套 CAD 完成零件繪圖並轉入 CoppeliaSim 後, 為了建立 Dynamic Model 必須利用 <a href="https://www.coppeliarobotics.com/helpFiles/en/shapeEditModes.htm">shape edit modes</a> 轉為 <a href="https://www.coppeliarobotics.com/helpFiles/en/buildingAModelTutorial.htm">clean model</a>, 並與實際轉入的 STL 格式零件外形結合應用後建立模擬場景 (scenes).</p>
<p style="padding-left: 30px;">3. meARM Robot <a href="https://www.youtube.com/watch?v=YdhpMqNa_mE">動態模擬場景</a>的建構, 可參考 <a href="https://www.youtube.com/watch?v=ucO0v5iel-c">0</a>, <a href="https://www.youtube.com/watch?v=jeviAIlh7wY">1</a>, <a href="https://www.youtube.com/watch?v=MrmHoGa3Kg4">2</a>, <a href="https://www.youtube.com/watch?v=43-xyipH9Ss">3</a>, <a href="https://www.youtube.com/watch?v=i9e4GXov8rk">4</a>, <a href="https://www.youtube.com/watch?v=7f1jzC6Uptg">5</a>, <a href="https://www.youtube.com/watch?v=xadyMQJxjnw">6</a>, <a href="https://www.youtube.com/watch?v=SQhKlnNnzuQ">7</a>, 也可參考 <a href="https://github.com/mdecourse/models/blob/master/robots/non-mobile/uarm.ttm">Uarm Robot model</a> 與相關<a href="https://www.youtube.com/watch?v=OqPVK__z9Ek">影片</a>.</p>
<p style="padding-left: 30px;">4. CoppeliaSim design dynamic simulations <a href="https://www.coppeliarobotics.com/helpFiles/en/designingDynamicSimulations.htm">說明頁面</a>.</p>
<p style="padding-left: 30px;">5. <a href="https://mde.tw/cad2021/downloads/lua/index.html">網際 Lua</a> 程式執行.</p>
<p style="padding-left: 30px;">6. <a href="/downloads/meArm.slvs">meArm.slvs</a>, <a href="/downloads/meArm_in_solvespace.slvs">meArm_in_solvespace.slvs</a></p>
<p style="padding-left: 30px;">7. UI 介面程式參考:</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function closeEventHandler(h)
    sim.addLog(sim.verbosity_scriptinfos,'Window '..h..' is closing...')
    simUI.hide(h)
end

function joint1_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta1 set to '..newVal)
    sim.setJointTargetPosition(joint1, newVal*deg)
end

function joint2_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta2 set to '..newVal)
    sim.setJointTargetPosition(joint2, newVal*deg)
end

function joint3_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta3 set to '..newVal)
    sim.setJointTargetPosition(joint3, newVal*deg)
end

function joint16_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta16 set to '..newVal)
    sim.setJointTargetPosition(joint16, newVal*deg)
    sim.setJointTargetPosition(joint20, -newVal*deg)
end

function sysCall_init()
    -- do some initialization here
    joint1 = sim.getObjectHandle('motor1')
    joint2 = sim.getObjectHandle('motor2')
    joint3 = sim.getObjectHandle('motor3')
    joint16 = sim.getObjectHandle('motor16')
    joint20 = sim.getObjectHandle('motor20')
    i = 0
    deg = math.pi/180
    print(i)
    xml = [[
&lt;ui closeable="true" on-close="closeEventHandler" resizable="true"&gt;
    &lt;label text="This is a demo of the CustomUI plugin. Browse through the tabs below to explore all the widgets that can be created with the plugin." wordwrap="true" /&gt;
    &lt;tabs&gt;
        &lt;tab title="Numeric"&gt;a
            &lt;label text="Sliders can be oriented horizontally or vertically, and have optional properties that can be set (in the XML) such as minimum and maximum value." wordwrap="true" /&gt;
            &lt;label text="" id="3000" wordwrap="true" /&gt;
            &lt;label text="theta1" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="0" maximum="360" on-change="joint1_rotate" /&gt;
            &lt;label text="theta2" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="-90" maximum="65" on-change="joint2_rotate" /&gt;
            &lt;label text="theta3" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="-90" maximum="185" on-change="joint3_rotate" /&gt;
            &lt;label text="theta16" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="0" maximum="15" on-change="joint16_rotate" /&gt;
        &lt;/tab&gt;
    &lt;/tabs&gt;
&lt;/ui&gt;
]]
    ui=simUI.create(xml)
    
end</pre>
<p><img alt="" class="add_border" height="282" src="/images/meArm_linkage_dimension.png" width="600"/></p>
<p>(From: <a href="/downloads/2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf">2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf</a>)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2pFReCfDZsU" title="YouTube video player" width="560"></iframe></p>
<h2>inventor 繪圖</h2>
<p><em>inventor 緣起說明與功能</em></p>
<p><span style="color: #ff9900;">起源</span>:</p>
<p>應用開發者團隊是由哈爾·阿伯爾森和馬克·弗里德曼領導</p>
<p>inventor一款卡通圖形界面的<span>Android</span>智慧型手機應用程式開發軟體。它起先由<span>Google</span>提供的應用軟體，現在由麻省理工學院維護及營運。</p>
<p>inventer可以讓任何熟悉或不熟悉程序設計的人來創造基於<span>Android</span>作業系統的應用軟體。它使用圖形化界面，非常類似於<span>Scratch</span>語言和<span>StarLogo TNG</span>用戶界面。用戶可以拖放圖形對象來創造一個運行在安卓系統上的應用，它就可以在許多手機設備上運行。</p>
<p><span>2010年7月12日這應用軟體運行</span></p>
<p><span>2010年12月15日對公眾開放</span></p>
<p><span>2011年12月31日谷歌終止了這應用開發者軟體</span></p>
<p><span>2013年12月6日應用開發者發表了App Inventor 2 Beta</span></p>
<p><span>020年2月起， 應用開發者把測試應用的軟體（AI Companion）推廣到iOS上面</span></p>
<p><span></span></p>
<p><span><span style="color: #ff9900;">功能</span>:</span></p>
<p><span>1. Autodesk Inventor </span>是一個電腦輔助製圖應用程序，用來進行<span>3D</span>機械設計、模擬、顯示、與儲存。</p>
<p><span>2. 整合2D和3D數據，創建一個虛擬的產品，使用戶能夠在產品正式生產前，驗證和調整產品的屬性。</span></p>
<p><span>3. 也包含數據、直接編輯和自由的建模工具，以及不同CAD檔案的轉檔能力。</span></p>
<h3>inventor 安裝配置</h3>
<p></p>
<p>inventor 下載安裝與配置流程 embedded 影片: 標題必須為「<span style="background-color: #ffff99;">NFU - MDE - cad2021 - 學號 - SW2020 下載安裝與配置</span>」且加上<span style="background-color: #ccffcc;">語音說明</span>與<span style="background-color: #ccffcc;">字幕.</span></p>
<p><span style="background-color: #00ff00;">inventor 套件下載安裝與配置 <a href="https://www.youtube.com/watch?v=K8MVRSU9B4Q">https://www.youtube.com/watch?v=K8MVRSU9B4Q</a></span></p>
<p></p>
<p>1.到學校E-care申請vpn，申請通過系統會寄gmail給你。</p>
<p><img alt="" height="225" src="/images/vpn申請通過.png" width="400"/></p>
<p></p>
<p>2.點入連結進行登入的動作</p>
<p><img alt="" height="225" src="/images/vpn登入.jpg" width="400"/></p>
<p>3.登入並連線成功後會顯示以下圖片的樣子</p>
<p><img alt="" height="225" src="/images/vpn.png" width="399"/></p>
<p>4.接下來就可以安裝inventor</p>
<p> 1. 點開setup</p>
<p>     <img alt="" height="225" src="/images/點開setup.jpg" width="400"/></p>
<p> 2. 跟著連結操作 <a href="https://software.nfu.edu.tw/files/AUTODESK%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8.pdf">AutocadDesk 安裝教學.pdf</a></p>
<p> <img alt="" height="225" src="/images/autocad 安裝.png" width="400"/></p>
<h3>inventor 操作流程</h3>
<p>CAD1 指各學員所分配到的第一套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace.</p>
<p>inventor 零組件繪圖操作流程影片 (<a href="https://youtu.be/EKlKJgJoj4g">Youtube</a>)</p>
<p>inventor 零組件繪圖教學影片 (<a href="https://youtu.be/EKlKJgJoj4g">https://youtu.be/EKlKJgJoj4g</a>)</p>
<p>inventor 零組件繪圖教學影片 embedded 影片: 標題必須為「<span style="background-color: #ffff99;">NFU - MDE - cad2021 - 40923208 - IV2020 </span>零組件繪圖教學影片」且加上<span style="background-color: #ccffcc;">語音說明</span>與<span style="background-color: #ccffcc;">字幕.<br/></span></p>
<p>若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱.</p>
<h2>solvespace 繪圖</h2>
<p>solvespace 起源說明與功能</p>
<p><span style="color: #ff9900;">起源</span>:</p>
<p><span>SolveSpace是一套免費且開源的CAD軟體，作者是</span><span>Jonathan Westhues與其他自願者</span><span>，於2008年開發，作業環境跨足Windows、Linux和MacOS。</span></p>
<p><span style="color: #ff9900;">功能</span>:</p>
<p><span>SolveSpace</span>的大部分“基本功能”，包括草圖、約束、擠壓和布爾運算</p>
<ol>
<li><span>第一次運行 SolveSpace 時，我們將從一個空的部分開始</span></li>
<li><span>最初，我們視圖的零件將定向到 XY 平面</span></li>
<li><span>該平面的標籤顯示在屏幕的左下角（#XY，深灰色）</span></li>
<li><span>軸也由左下方的三個彩色箭頭指示</span></li>
<li><span>X、Y 和 Z 軸分別用紅色、綠色和藍色繪製</span></li>
</ol>
<h3>solvespace 安裝配置</h3>
<p></p>
<p>CAD2 套件下載安裝與配置影片 embedded 影片: 標題必須為「<span style="background-color: #ffff99;">NFU - MDE - cad2021 - 學號 - SW2020 </span>套件下載安裝與配置影片」且加上<span style="background-color: #ccffcc;">語音說明</span>與<span style="background-color: #ccffcc;">字幕.<br/></span></p>
<p><span style="background-color: #ccffcc;"><span>solvespace 套件下載安裝與配置 <a href="https://www.youtube.com/watch?v=TyP00MXbc4w" rel="nofollow">https://www.youtube.com/watch?v=TyP00MXbc4w</a></span></span></p>
<p> 1.搜尋solvespace</p>
<p> <img alt="" height="225" src="/images/solvespace1.png" width="400"/></p>
<p> 2.點選第一個</p>
<p> <img alt="" height="225" src="/images/solvespace2.png" width="400"/></p>
<p> 3.點選download</p>
<p> <img alt="" height="225" src="/images/solvespace3.png" width="400"/></p>
<p> 4.點選最新版本3.0</p>
<p> <img alt="" height="225" src="/images/solvespace4.png" width="400"/></p>
<h3>solvespace 操作流程</h3>
<p>CAD2 指各學員所分配到的第二套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace.</p>
<p>solvespace 零組件繪圖操作流程影片 (<a href="https://youtu.be/H65aGa1UOPI">Youtube</a>)</p>
<p>solvespace 零組件繪圖教學影片 (<a href="https://youtu.be/H65aGa1UOPI">https://youtu.be/H65aGa1UOPI</a>)</p>
<p>CAD2 零組件繪圖教學影片 embedded 影片: 標題必須為「<span style="background-color: #ffff99;">NFU - MDE - cad2021 - 學號 - SW2020 </span>零組件繪圖教學影片」且加上<span style="background-color: #ccffcc;">語音說明</span>與<span style="background-color: #ccffcc;">字幕.<br/></span></p>
<p>若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱.</p>
<h2>運動場景</h2>
<h4>inventor:</h4>
<p style="padding-left: 30px;">inventor 零件轉出後轉入 CoppeliaSim 操作影片 (Youtube)</p>
<p style="padding-left: 30px;">inventor 零件轉入 CoppeliaSim 教學影片 (Wink)</p>
<p style="padding-left: 30px;">inventor 轉入 Coppeliasim 教學影片 embedded 影片: 標題必須為「<span style="background-color: #ffff99;">NFU - MDE - cad2021 - 學號 - SW2020 </span>零件轉入 CoppeliaSim 教學影片」且加上<span style="background-color: #ccffcc;">語音說明</span>與<span style="background-color: #ccffcc;">字幕.<br/></span></p>
<h4>solvespace:</h4>
<p style="padding-left: 30px;">solvespace 零件轉出後轉入 CoppeliaSim 操作影片 (Youtube)</p>
<p style="padding-left: 30px;">solvespace 零件轉入 CoppeliaSim 教學影片 (Wink)</p>
<p style="padding-left: 30px;">solvespace 轉入 Coppeliasim 教學影片 embedded 影片: 標題必須為「<span style="background-color: #ffff99;">NFU - MDE - cad2021 - 學號 - SW2020 </span>零件轉入 CoppeliaSim 教學影片」且加上<span style="background-color: #ccffcc;">語音說明</span>與<span style="background-color: #ccffcc;">字幕.</span></p>
<p>若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱.</p>
<h2>W13</h2>
<p>solvespace</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="756" video="" width="1344">
<source src="/downloads/slovespace零件.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoControlBarClass">inventor</div>
<div class="winkVideoControlBarClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="756" video="" width="1344">
<source src="/downloads/inventor零件.mp4" type="video/mp4"/>
</video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div><h1>HW1-1</h1>
<p>HW1-1 佔學期成績 15%</p>
<p><span style="background-color: #ffff99;">HW1-1 必須在 2021.12.01 22:00 之前完成.<br/></span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/6">HW1-1 具體項目成果回報區</a>將於 2021.11.18 開啟, 於 <span style="background-color: #ff99cc;">2021.12.01 22:00 關閉.</span></p>
<h4>作業 1-1: Mirobot 機械手臂場景組合</h4>
<p>說明: meArm Robot 有四個自由度, 請根據 HW1 的零組件繪製組立與 CoppeliaSim 運動場景模擬, 延伸至 <a href="https://mde.tw/cad2021/content/Task1-1.html">Task1-1</a> 中六個自由度的 Mirobot 機械手臂.</p>
<p><a href="https://drive.google.com/file/d/1hnoMQ1Hh_Hgdxh7Aym4q43DzLjOWUanR/view?usp=sharing">mirobot_part1_to_part5.7z</a> 為取自  <a href="https://github.com/wlkata/Mirobot-STL">https://github.com/wlkata/Mirobot-STL</a> 的參考零件. 請利用場景中 Mirobot STL 零件, 組合為可以透過 <a href="https://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">UI 介面</a>中的 slider 控制各軸作動旋轉的運動模型.</p>
<p>請根據 <a href="https://mde.tw/cad2021/content/Task1-1.html">Task1-1</a> 中的說明, 完成各項指定任務.</p>
<h1>HW2</h1>
<p>HW2 佔學期成績 20%</p>
<p><span style="background-color: #ffff99;">HW2 必須在 2021.12.22 22:00 之前完成.</span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/7">HW2 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2021.12.22 22:00 關閉.</span></p>
<p>meArm 逆向運動學與網際參數式 CAD API 結合應用.</p>
<p>請將 <a href="https://github.com/mdecourse/meArm">https://github.com/mdecourse/meArm</a> 中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制.</p>
<p>請利用 <a href="https://mde.tw/cad2021/content/Task%202.html">Task2</a> 中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求.</p>
<h4>參考:</h4>
<p style="padding-left: 30px;"><a href="/downloads/2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf">2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenberg.pdf">Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenber.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/KINEMATIC ANALYSIS FOR ROBOT ARM.pdf">KINEMATIC ANALYSIS FOR ROBOT ARM.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://codebender.cc/user/MeArm">https://codebender.cc/user/MeArm</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/meArmPi">https://github.com/mdecourse/meArmPi</a></p>
<p style="padding-left: 60px;"><a href="/downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf">/downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/me-arm-ik">https://github.com/mdecourse/me-arm-ik</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/mearm_model">https://github.com/mdecourse/mearm_model</a></p>
<p style="padding-left: 30px;"><a href="https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html">https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/InefficientSkittleSorter">https://github.com/mdecourse/InefficientSkittleSorter</a></p>
<p style="padding-left: 30px;"><a href="https://mearm.com">https://mearm.com</a></p>
<h1>HW3</h1>
<p>HW3 為選項作業.</p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/9">HW3 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p><a href="https://mde.tw/cad2021/content/Task3.html">https://mde.tw/cad2021/content/Task3.html</a> </p>
<p><a href="https://mde.tw/cad2021/content/Task4.html">https://mde.tw/cad2021/content/Task4.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task5.html">https://mde.tw/cad2021/content/Task5.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task6.html">https://mde.tw/cad2021/content/Task6.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task7.html">https://mde.tw/cad2021/content/Task7.html</a></p>
<p>請從上列 Tasks 中自行選擇項目內容完成 HW3.</p>
<h1>Final Project</h1>
<p>Final Project 佔學期成績 40%</p>
<p><span style="background-color: #ffff99;">2a 與 2b 必須在 2022.01.06 上課之前完成 Final Project</span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/8">Final Project 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p><span style="background-color: #00ff00;">零件+組合Wink</span></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="756" video="" width="1344">
<source src="https://nfu40923208.github.io/cad2021_hw/downloads/40923208final%20test.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="756" video="" width="1344">
<source src="https://nfu40923208.github.io/cad2021_hw/downloads/08.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video 756="" class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="150" video="" width="1344">
<source src="/downloads/40923208final test2.mp4" type="video/mp4"/>
</video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div><h1>RUN</h1>
<p><span style="background-color: #ffff99;"><!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</span></p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="te&lt;h1&gt;RUN&lt;/h1&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;script src="></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/e896a4705a95ac8cc4147b355b0e87ef/raw/8954b8280c524c5781dc3c0b3565bc489d3aa3a3/cango_gear1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<div id="brython_div"></div>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>